group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name)
dataset %>%
filter(count > 499) %>%
filter(year < 1970) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name)
dataset %>%
filter(count > 499) %>%
filter(year < 1970) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender)
tibble(a = sample(letters))
tibble(a = sample(c("a","b")))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
tibble(a = sample(c("a","b"), replace = TRUE))
?sample
tibble(a = sample(c("a","b"), replace = TRUE, size = 10))
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10))
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10))
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
tibble(a = sample(c("a","b"), replace = TRUE, size = 10), b = rnorm(10, mean = 10)) %>% group_by(a) %>% tally(wt = b)
summarize_names <- function(start = 0, end = Inf, gender_arg = 'F') {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg)
}
summarize_names()
summarize_names(gender_arg = "M")
table(dataset$gender)
tally(dataset, wt = count)
dataset %>%
group_by(gender) %>%
tally(wt = count)
dataset %>%
group_by(gender) %>%
tally(wt = count) %>%
rename(count = wt)
dataset %>%
group_by(gender) %>%
tally(wt = count) %>%
rename(count = n)
dataset %>%
group_by(year, gender) %>%
tally(wt = count) %>%
rename(count = n)
dataset %>%
group_by(year, gender) %>%
tally(wt = count) %>%
rename(count = n) %>% print
gender_balance <- dataset %>%
group_by(year, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
ungroup() %>%
group_by(year) %>%
mutate(percent = count / sum(count))
gender_balanbce
gender_balance
census <- read.table("http://www.census.gov/popest/data/state/asrh/2013/files/SCPRC-EST2013-18+POP-RES.csv",
header = TRUE,
sep = ",",
stringsAsFactors = FALSE)
dataset
dataset %>%
group_by(year, gender) %>%
tally(wt = count)
gender_balance <- dataset %>%
group_by(year, gender) %>%
tally(wt = count)
gender_balance <- dataset %>%
group_by(year, gender) %>%
tally(wt = count)
ggplot(gender_balance, aes(x = year, y = percent)) +
geom_point(aes(color = gender)) +
scale_x_discrete(breaks = seq(from = 1890, to = 2010, by = 10)) +
theme_bw() +
scale_color_manual(values=c("red", "blue")) +
ggtitle("Names by gender by year")
gender_balance <- dataset %>%
group_by(year, gender) %>%
tally(wt = count)
ggplot(gender_balance, aes(x = year, y = count)) +
geom_point(aes(color = gender)) +
scale_x_discrete(breaks = seq(from = 1890, to = 2010, by = 10)) +
theme_bw() +
scale_color_manual(values=c("red", "blue")) +
ggtitle("Names by gender by year")
ggplot(gender_balance, aes(x = year, y = count)) +
geom_point(aes(color = gender))
gender_balance
gender_balance <- dataset %>%
group_by(year, gender) %>%
tally(wt = count) %>%
rename(count = n)
ggplot(gender_balance, aes(x = year, y = count)) +
geom_point(aes(color = gender)) +
scale_x_discrete(breaks = seq(from = 1890, to = 2010, by = 10)) +
theme_bw() +
scale_color_manual(values=c("red", "blue")) +
ggtitle("Names by gender by year")
summarize_names()
summarize_names <- function(start = 0, end = Inf, gender_arg = 'F') {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg)
}
summarize_names(1920, 1950, "F")
summarize_names(1920, 1950, "M")
max(dataset$year)
1950-1920
2015-30
men_old <- summarize_names(1920, 1950, "M")
men_old <- summarize_names(1920, 1950, "M")
women_old <- summarize_names(1920, 1950, "F")
women_old <- summarize_names(1920, 1950, "F")
men_new <- summarize_names(1985, 2015, "M")
women_old <- summarize_names(1920, 1950, "F")
men_new <- summarize_names(1985, 2015, "M")
women_new <- summarize_names(1985, 2015, "F")
summarize_names <- function(start = 0, end = Inf, gender_arg = "F") {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg)
select(name, count)
}
men_old <- summarize_names(1920, 1950, "M")
men_old <- summarize_names(1920, 1950, "M")
summarize_names <- function(start = 0, end = Inf, gender_arg = "F") {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg) %>%
select(name, count)
}
men_old <- summarize_names(1920, 1950, "M")
women_old <- summarize_names(1920, 1950, "F")
men_new <- summarize_names(1985, 2015, "M")
inner_join(men_old, women_old)
men_old
summarize_names <- function(start = 0, end = Inf, gender_arg = "F", count_name = "count") {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count_name = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg) %>%
select(name, count)
}
summarize_names
summarize_names()
summarize_names <- function(start = 0, end = Inf, gender_arg = "F") {
dataset %>%
filter(count > 499) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg) %>%
select(name, count)
}
men_old <- summarize_names(1920, 1950, "M") %>% rename(men = count)
old <- inner_join(men_old, women_old)
old <- inner_join(men_old, women_old)
old
new
dataset_old <- inner_join(men_old, women_old)
men_old
men_new
women_old
women_new
women_old <- summarize_names(1920, 1950, "F") %>% rename(women = count)
women_old
men_old <- summarize_names(1920, 1950, "M") %>% rename(men = count)
women_old <- summarize_names(1920, 1950, "F") %>% rename(women = count)
men_new <- summarize_names(1985, 2015, "M") %>% rename(men = count)
women_new <- summarize_names(1985, 2015, "F") %>% rename(women = count)
dataset_old <- inner_join(men_old, women_old)
dataset_old
dataset_new
dataset_new
dataset_new <- inner_join(men_new, women_new)
dataset_new
dataset_old <- inner_join(men_old, women_old) %>%
group_by(name) %>%
mutate(per_f = women / sum(men + women))
dataset_old
dataset_old <- inner_join(men_old, women_old) %>%
group_by(name) %>%
mutate(per_f_old = women / sum(men + women)) %>%
select(name, per_f_old)
dataset_new <- inner_join(men_new, women_new) %>%
group_by(name) %>%
mutate(per_f_new = women / sum(men + women)) %>%
select(name, per_f_new)
inner_join(dataset_old, dataset_new)
summarize_names <- function(start = 0, end = Inf, gender_arg = "F") {
dataset %>%
filter(count > 99) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg) %>%
select(name, count)
}
summarize_names <- function(start = 0, end = Inf, gender_arg = "F") {
dataset %>%
filter(count > 9) %>%
filter(year >= start) %>%
filter(year <= end) %>%
group_by(name, gender) %>%
tally(wt = count) %>%
rename(count = n) %>%
arrange(name, gender) %>%
filter(gender == gender_arg) %>%
select(name, count)
}
men_old <- summarize_names(1920, 1950, "M") %>% rename(men = count)
women_old <- summarize_names(1920, 1950, "F") %>% rename(women = count)
men_new <- summarize_names(1985, 2015, "M") %>% rename(men = count)
women_new <- summarize_names(1985, 2015, "F") %>% rename(women = count)
dataset_old <- inner_join(men_old, women_old) %>%
group_by(name) %>%
mutate(per_f_old = women / sum(men + women)) %>%
select(name, per_f_old)
dataset_new <- inner_join(men_new, women_new) %>%
group_by(name) %>%
mutate(per_f_new = women / sum(men + women)) %>%
select(name, per_f_new)
inner_join(dataset_old, dataset_new)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange(delta)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange(desc(delta))
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange((delta))
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange(abs(delta))
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange(desc(abs(delta)))
?kable
library(knitr)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
arrange(desc(abs(delta))) %>% kable
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Female, `) %>%
kable()
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Female, ` = per_f_old) %>%
kable()
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `% female, 1920-1950` = per_f_old) %>%
kable()
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Percent female, old` = per_f_old, `Percent female, new` = per_f_new, `Change over time` = delta) %>%
kable()
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Percent female, old` = per_f_old, `Percent female, new` = per_f_new, `Change over time` = delta) %>%
kable(digits = 2)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Percent female, old` = per_f_old, `Percent female, new` = per_f_new, `Change over time` = delta) %>%
kable(digits = 2)
inner_join(dataset_old, dataset_new) %>%
mutate(delta = per_f_old - per_f_new) %>%
filter(abs(delta) > 0.5) %>%
arrange(desc(abs(delta))) %>%
rename(Name = name, `Per female old` = per_f_old, `Per female, new` = per_f_new, `Change` = delta) %>%
kable(digits = 2)
library(knitr)
?left_join
rmd2md()
rmd2md()
rmd2md()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(stringr)
library(knitr)
# Temporarily change working directory to a temp folder
# ...Don't worry, I'll change it back
old_wd <- getwd()
setwd(tempdir())
# Download and unzip dataset from data.gov
download.file("https://www.ssa.gov/oact/babynames/names.zip",
destfile = "names.zip")
unzip("names.zip")
file_list <- list.files(pattern = "yob[0-9][0-9][0-9][0-9]\\.txt$")
dataset <-
lapply(file_list, function(x) {
dat <- read_csv(x, col_names = FALSE, col_types = cols(X2 = col_character()))
dat$year <- str_extract(x, "[0-9][0-9][0-9][0-9]")
return(dat)
})
dataset <- dataset %>%
do.call("rbind", .) %>%
tbl_df()
# See? I told you I'd change it back
setwd(old_wd)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(stringr)
library(knitr)
old_wd <- getwd()
setwd(tempdir())
download.file("https://www.ssa.gov/oact/babynames/names.zip",
destfile = "names.zip")
unzip("names.zip")
file_list <- list.files(pattern = "yob[0-9][0-9][0-9][0-9]\\.txt$")
dataset <-
lapply(file_list, function(x) {
dat <- read_csv(x, col_names = FALSE, col_types = cols(X2 = col_character()))
dat$year <- str_extract(x, "[0-9][0-9][0-9][0-9]")
return(dat)
})
dataset <-
lapply(file_list, function(x) {
dat <- read_csv(x, col_names = FALSE, col_types = cols(X2 = col_character()))
dat$year <- str_extract(x, "[0-9][0-9][0-9][0-9]")
return(dat)
})
dataset <- dataset %>%
do.call("rbind", .) %>%
tbl_df()
dataset <- dataset %>%
do.call("rbind", .) %>%
tbl_df()
setwd(old_wd)
head(dataset)
dataset
ls()
dataset[1]
dataset
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(stringr)
library(knitr)
old_wd <- getwd()
setwd(tempdir())
# Download and unzip dataset from data.gov
download.file("https://www.ssa.gov/oact/babynames/names.zip",
destfile = "names.zip")
unzip("names.zip")
getwd()
tempdir()
#' This R script will process all R mardown files (those with in_ext file extention,
#' .rmd by default) in the current working directory. Files with a status of
#' 'processed' will be converted to markdown (with out_ext file extention, '.markdown'
#' by default). It will change the published parameter to 'true' and change the
#' status parameter to 'publish'.
#'
#' @param path_site path to the local root storing the site files
#' @param dir_rmd directory containing R Markdown files (inputs)
#' @param dir_md directory containing markdown files (outputs)
#' @param url_images where to store/get images created from plots directory +"/" (relative to path_site)
#' @param out_ext the file extention to use for processed files.
#' @param in_ext the file extention of input files to process.
#' @param recursive should rmd files in subdirectories be processed.
#' @return nothing.
#' @author Jason Bryer <jason@bryer.org> edited by Andy South
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''))
content <- readLines(file.path(path_site,dir_rmd,f))
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
opts_knit$set(base.url = "/")
opts_chunk$set(fig.path = url_images)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
#opts_chunk$set(fig.width  = 8.5,
#               fig.height = 5.25)
try(knit(text=content, output=outFile), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
rmd2md()
rmd2md()
rmd2md()
rmd2md()
getwd()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
